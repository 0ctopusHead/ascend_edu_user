name: Deploy Application

on:
  push:
    branches:
      - deploy
      -
env:
  OPENAI_API_KEY: '${{ secrets.OPENAI_API_KEY }}'
  MONGO_URI: '${{ secrets.MONGO_URI }}'

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set environment variables

      run: |
        python -c "import os; print(os.environ.get('MONGO_URI'))"
      

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to Dockerhub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_TOKEN }}

    - name: Build and push
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        tags: octopushead/ascend-user:latest
        no-cache: true

    - name: copy file via ssh password
      uses: appleboy/scp-action@v0.1.4
      with:
        host: ${{ secrets.HOST_SERVER }}
        username: ${{ secrets.HOST_USER_NAME }}
        password: ${{ secrets.HOST_PASSWORD }}
        key: ${{ secrets.HOST_SSH_PRIVATE_KEY }}
        port: 22
        source: docker-compose.yml
        target: "/home/root/backend"

    - name: Docker compose
      uses: appleboy/ssh-action@v0.1.10
      with:
        host: ${{ secrets.HOST_SERVER }}
        username: ${{ secrets.HOST_USER_NAME }}
        password: ${{ secrets.HOST_PASSWORD }}
        key: ${{ secrets.HOST_SSH_PRIVATE_KEY }}
        port: 22
        script: |
          export MONGO_URI="${{ secrets.MONGO_URI }}" 
          export OPENAI_API_KEY="${{ secrets.OPENAI_API_KEY }}"
          cd /home/root/backend
          echo ${{ secrets.DOCKER_HUB_TOKEN }} | docker login --username ${{ secrets.DOCKER_HUB_USERNAME }} --password-stdin
          docker compose down
          docker compose pull
          docker compose up -d
          rm -rf /home/root/backend
          sudo systemctl restart gunicorn
          sudo systemctl restart nginx
